{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component,PropTypes}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Checkbox from\"./Checkbox\";var styles=StyleSheet.create({item:{backgroundColor:'#ffffff',marginTop:10,marginBottom:5,padding:15,flexDirection:'row',justifyContent:'space-between'},textComplete:{textDecorationLine:'line-through',fontSize:22},textIncomplete:{fontSize:22},cross:{color:'red',fontSize:15},crossContainer:{marginTop:5,marginRight:'auto',marginBottom:5,marginLeft:20}});var List=function(_Component){_inherits(List,_Component);var _super=_createSuper(List);function List(){var _this;_classCallCheck(this,List);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderItem=function(item,index){var _this$props=_this.props,onPressItem=_this$props.onPressItem,onCheck=_this$props.onCheck;return React.createElement(View,{style:styles.item,key:index},item.completed?React.createElement(Text,{style:styles.textComplete},item.text):React.createElement(Text,{style:styles.textIncomplete},item.text),React.createElement(View,{style:{flexDirection:'row'}},React.createElement(Checkbox,{style:{marginLeft:'auto'},onPress:function onPress(){return onCheck(item.key);},completed:item.completed}),React.createElement(TouchableOpacity,{onPress:function onPress(){return onPressItem(item.key);},style:styles.crossContainer},React.createElement(Text,{style:styles.cross},\"x\"))));};return _this;}_createClass(List,[{key:\"render\",value:function render(){var list=this.props.list;return React.createElement(ScrollView,{bounces:true},list.map(this.renderItem));}}]);return List;}(Component);export{List as default};","map":{"version":3,"sources":["/Users/mickey/projects/ToDoList/components/List.js"],"names":["React","Component","PropTypes","Checkbox","styles","StyleSheet","create","item","backgroundColor","marginTop","marginBottom","padding","flexDirection","justifyContent","textComplete","textDecorationLine","fontSize","textIncomplete","cross","color","crossContainer","marginRight","marginLeft","List","renderItem","index","props","onPressItem","onCheck","completed","text","key","list","map"],"mappings":"ggCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,SAA3B,KAA4C,OAA5C,C,yTAGA,MAAOC,CAAAA,QAAP,kBAEA,GAAMC,CAAAA,MAAM,CAAGC,UAAU,CAACC,MAAX,CAAkB,CAC/BC,IAAI,CAAE,CACJC,eAAe,CAAE,SADb,CAEJC,SAAS,CAAE,EAFP,CAGJC,YAAY,CAAE,CAHV,CAIJC,OAAO,CAAE,EAJL,CAKJC,aAAa,CAAE,KALX,CAMJC,cAAc,CAAE,eANZ,CADyB,CAU/BC,YAAY,CAAE,CACZC,kBAAkB,CAAE,cADR,CAEZC,QAAQ,CAAE,EAFE,CAViB,CAc/BC,cAAc,CAAE,CACdD,QAAQ,CAAE,EADI,CAde,CAiB/BE,KAAK,CAAE,CACLC,KAAK,CAAC,KADD,CAELH,QAAQ,CAAE,EAFL,CAjBwB,CAqB/BI,cAAc,CAAE,CACdX,SAAS,CAAE,CADG,CAEdY,WAAW,CAAE,MAFC,CAGdX,YAAY,CAAE,CAHA,CAIdY,UAAU,CAAE,EAJE,CArBe,CAAlB,CAAf,C,GA8BqBC,CAAAA,I,sSAGnBC,U,CAAa,SAACjB,IAAD,CAAOkB,KAAP,CAAiB,iBACK,MAAKC,KADV,CACnBC,WADmB,aACnBA,WADmB,CACNC,OADM,aACNA,OADM,CAE1B,MAEI,qBAAC,IAAD,EACA,KAAK,CAAExB,MAAM,CAACG,IADd,CAEA,GAAG,CAAGkB,KAFN,EAGElB,IAAI,CAACsB,SAAL,CACD,oBAAC,IAAD,EAAM,KAAK,CAAEzB,MAAM,CAACU,YAApB,EAAmCP,IAAI,CAACuB,IAAxC,CADC,CAED,oBAAC,IAAD,EAAM,KAAK,CAAE1B,MAAM,CAACa,cAApB,EAAqCV,IAAI,CAACuB,IAA1C,CALD,CAOC,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAClB,aAAa,CAAC,KAAf,CAAb,EACC,oBAAC,QAAD,EAAU,KAAK,CAAE,CAACU,UAAU,CAAC,MAAZ,CAAjB,CACE,OAAO,CAAE,yBAAKM,CAAAA,OAAO,CAACrB,IAAI,CAACwB,GAAN,CAAZ,EADX,CAEE,SAAS,CAAExB,IAAI,CAACsB,SAFlB,EADD,CAKC,oBAAC,gBAAD,EAAkB,OAAO,CAAE,yBAAKF,CAAAA,WAAW,CAACpB,IAAI,CAACwB,GAAN,CAAhB,EAA3B,CAAuD,KAAK,CAAE3B,MAAM,CAACgB,cAArE,EACE,oBAAC,IAAD,EAAM,KAAK,CAAEhB,MAAM,CAACc,KAApB,MADF,CALD,CAPD,CAFJ,CAsBH,C,uEACQ,IACCc,CAAAA,IADD,CACU,KAAKN,KADf,CACCM,IADD,CAGP,MACE,qBAAC,UAAD,EACE,OAAO,CAAE,IADX,EAGIA,IAAI,CAACC,GAAL,CAAS,KAAKT,UAAd,CAHJ,CADF,CAQD,C,kBAvC+BvB,S,SAAbsB,I","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { View, Text, ScrollView, StyleSheet, TouchableOpacity} from 'react-native'\n\nimport Checkbox from './Checkbox'\n\nconst styles = StyleSheet.create({\n  item: {\n    backgroundColor: '#ffffff',\n    marginTop: 10,\n    marginBottom: 5,\n    padding: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n    \n  },\n  textComplete: {\n    textDecorationLine: 'line-through',\n    fontSize: 22\n  },\n  textIncomplete: {\n    fontSize: 22\n  },\n  cross: {\n    color:'red', \n    fontSize: 15\n  },\n  crossContainer: {\n    marginTop: 5, \n    marginRight: 'auto', \n    marginBottom: 5, \n    marginLeft: 20\n  }\n  \n})\n\nexport default class List extends Component {\n\n\n  renderItem = (item, index) => {\n      const {onPressItem, onCheck} = this.props\n      return (\n        \n          <View\n          style={styles.item}\n          key= {index}>\n           {item.completed ? \n           <Text style={styles.textComplete}>{item.text}</Text> :\n           <Text style={styles.textIncomplete}>{item.text}</Text>\n           }\n           <View style={{flexDirection:'row'}}>\n            <Checkbox style={{marginLeft:'auto'}}\n              onPress={()=> onCheck(item.key) }\n              completed={item.completed}\n              />\n            <TouchableOpacity onPress={()=> onPressItem(item.key)} style={styles.crossContainer}>\n              <Text style={styles.cross}>x</Text>\n            </TouchableOpacity>\n           </View> \n           \n          </View>\n          \n      )\n  }\n  render() {\n    const { list } = this.props\n    \n    return (     \n      <ScrollView\n        bounces={true}\n      >\n         {list.map(this.renderItem)}\n      </ScrollView> \n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}