{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as TodoActionTypes from \"../actionTypes/todolist\";\nvar initialState = {\n  items: [{\n    text: 'Buy coffee',\n    key: 1,\n    completed: false\n  }, {\n    text: 'Build my app',\n    key: 2,\n    completed: false\n  }, {\n    text: 'Study for the exam',\n    key: 3,\n    completed: false\n  }]\n};\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var items = state.items;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case TodoActionTypes.ADD_ITEM:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: [].concat(_toConsumableArray(items), [{\n          key: action.id,\n          text: payload,\n          completed: false\n        }])\n      });\n\n    case TodoActionTypes.REMOVE_ITEM:\n      return {\n        items: items.filter(function (item) {\n          return item.key != payload;\n        })\n      };\n\n    case TodoActionTypes.TOGGLE_ITEM_COMPLETED:\n      return {\n        items: items.map(function (item) {\n          if (item.key !== payload) return item;else return _objectSpread(_objectSpread({}, item), {}, {\n            completed: !item.completed\n          });\n        })\n      };\n\n    case TodoActionTypes.REMOVE_COMPLETED_ITEMS:\n      return {\n        items: items.filter(function (item) {\n          return !item.completed;\n        })\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/mickey/projects/ToDoList/redux/todoRedux.js"],"names":["TodoActionTypes","initialState","items","text","key","completed","reducer","state","action","type","payload","ADD_ITEM","id","REMOVE_ITEM","filter","item","TOGGLE_ITEM_COMPLETED","map","REMOVE_COMPLETED_ITEMS"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,eAAZ;AAQA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CACL;AAAEC,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,GAAG,EAAE,CAA3B;AAA8BC,IAAAA,SAAS,EAAE;AAAzC,GADK,EAEL;AAAEF,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,GAAG,EAAE,CAA7B;AAAgCC,IAAAA,SAAS,EAAE;AAA3C,GAFK,EAGL;AAAEF,IAAAA,IAAI,EAAE,oBAAR;AAA8BC,IAAAA,GAAG,EAAE,CAAnC;AAAsCC,IAAAA,SAAS,EAAE;AAAjD,GAHK;AADY,CAArB;AAUA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;AAAA,MAC/CN,KAD+C,GACrCK,KADqC,CAC/CL,KAD+C;AAAA,MAE/CO,IAF+C,GAE7BD,MAF6B,CAE/CC,IAF+C;AAAA,MAEzCC,OAFyC,GAE7BF,MAF6B,CAEzCE,OAFyC;;AAIvD,UAAOD,IAAP;AAEE,SAAKT,eAAe,CAACW,QAArB;AACE,6CACKJ,KADL;AAEEL,QAAAA,KAAK,+BAAMA,KAAN,IAAY;AACfE,UAAAA,GAAG,EAAEI,MAAM,CAACI,EADG;AAEfT,UAAAA,IAAI,EAAEO,OAFS;AAGfL,UAAAA,SAAS,EAAE;AAHI,SAAZ;AAFP;;AASF,SAAKL,eAAe,CAACa,WAArB;AACE,aAAO;AACLX,QAAAA,KAAK,EAAEA,KAAK,CAACY,MAAN,CAAc,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACX,GAAL,IAAWM,OAArB;AAAA,SAAd;AADF,OAAP;;AAIF,SAAKV,eAAe,CAACgB,qBAArB;AAEE,aAAO;AACLd,QAAAA,KAAK,EAAEA,KAAK,CAACe,GAAN,CAAU,UAACF,IAAD,EAAQ;AACvB,cAAIA,IAAI,CAACX,GAAL,KAAaM,OAAjB,EACI,OAAOK,IAAP,CADJ,KAGI,uCACKA,IADL;AAEEV,YAAAA,SAAS,EAAC,CAACU,IAAI,CAACV;AAFlB;AAIL,SARM;AADF,OAAP;;AAYF,SAAKL,eAAe,CAACkB,sBAArB;AACG,aAAO;AACLhB,QAAAA,KAAK,EAAEA,KAAK,CAACY,MAAN,CAAa,UAACC,IAAD;AAAA,iBAAS,CAACA,IAAI,CAACV,SAAf;AAAA,SAAb;AADF,OAAP;;AAIH;AACG,aAAOE,KAAP;AArCL;AAwCD,CA5CM","sourcesContent":["import * as TodoActionTypes from '../actionTypes/todolist';\n\n// const types = {\n// }\n\n// export const actionCreators = {\n// }\n\nconst initialState = {\n  items: [\n    { text: 'Buy coffee', key: 1, completed: false },\n    { text: 'Build my app', key: 2, completed: false },\n    { text: 'Study for the exam', key: 3, completed: false },\n      \n  ]\n  \n}\n\nexport const reducer = (state = initialState, action) => {\n  const { items } = state\n  const { type, payload } = action\n\n  switch(type) {\n    \n    case TodoActionTypes.ADD_ITEM: \n      return {\n        ...state,\n        items: [...items,{\n          key: action.id,\n          text: payload,\n          completed: false\n        }]\n      }\n\n    case TodoActionTypes.REMOVE_ITEM:\n      return {\n        items: items.filter( (item) => item.key!= payload )\n      }\n\n    case TodoActionTypes.TOGGLE_ITEM_COMPLETED:\n       \n      return {\n        items: items.map((item)=>{\n          if (item.key !== payload)\n              return item\n          else \n              return{\n                ...item,\n                completed:!item.completed          \n              }\n        })       \n      }  \n     \n    case TodoActionTypes.REMOVE_COMPLETED_ITEMS:\n       return {\n         items: items.filter((item)=> !item.completed )\n       }\n      \n    default: \n       return state;\n    \n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}